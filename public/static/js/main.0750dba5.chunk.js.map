{"version":3,"sources":["components/PickImages.js","functions/form.js","components/CrudCars.js","components/Menu.js","functions/sort.js","functions/api.js","functions/car.js","components/Login.js","App.js","serviceWorker.js","index.js"],"names":["PickImages","selectedBrand","selectedModel","selectedCars","select","unselect","nomatch","carElements","map","car","carIndex","carVariants","favcarsVariants","variant","imagesToSelect","urls","url","key","_id","name","style","border","selectedFavcarsUrl","onClick","src","maxHeight","alt","textAlign","display","manualAddImageForm","length","type","placeholder","onChange","event","target","value","selectedImage","unselectButton","selectedFavcarsVariant","noMatchButton","color","startYear","overflowY","errorToMessage","error","CrudCars","createCar","removeCar","useState","formDisplayed","setFormDisplayed","useForm","register","handleSubmit","errors","filter","id","className","role","aria-label","marginRight","title","fieldsContainerClassNames","push","onSubmit","data","model","join","ref","required","pattern","endYear","power","realWeight","officialWeight","options","Menu","menuSelect","selectedItem","setSelectedItem","sortField","a","b","field","sortBrands","sortModels","sortCars","BASE_URL","process","currentUserObservable","BehaviorSubject","authFetch","opts","fetch","headers","Authorization","token","accept","processInitData","cars","brands","models","modelMap","brandMap","brand","find","totalCount","okCount","console","log","computeSelectedCars","sort","Login","errorMessage","marginTop","defaultProps","computeButtonClassNames","selected","buttonClassNames","App","props","state","user","selectedModels","selectedMenu","loginProcess","bind","refreshState","refreshStateRemove","pipe","currentUser","subscribe","Promise","all","then","res","json","initData","setState","authFields","formFields","resolve","reject","method","body","JSON","stringify","response","status","catch","success","next","username","carId","indexCars","this","findIndex","newCars","selectedFavcarsImage","indexSelectedCars","newSelectedCars","updatedCar","updatedCarIndex","c","updatedCars","updatedSelectedCars","splice","brandElements","brandStats","isSelected","modelElements","modelStats","favcarsName","selectedMenuElement","noCarImageMatch","variantName","selectCarImage","addedCar","headerBrandModelElements","marginLeft","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0750dba5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport const PickImages = ({ selectedBrand, selectedModel, selectedCars, select, unselect, nomatch }) => {\r\n\r\n  const carElements = selectedCars.map((car, carIndex) => {\r\n    if (!car) {\r\n      return '';\r\n    }\r\n    const carVariants = car.favcarsVariants.map(variant => {\r\n\r\n      const imagesToSelect = variant.urls.map(url => (\r\n        <button key={car._id + variant.name + url}\r\n          style={{ border: car.selectedFavcarsUrl === url ? '3px solid yellow' : 'none' }}\r\n          onClick={() => select(car._id, variant.name, url)}>\r\n          <img src={url} style={{ maxHeight: '250px' }} alt={variant.name} />\r\n        </button>)\r\n      );\r\n\r\n      return (\r\n        <div key={car._id + variant.name}>\r\n          <h4 style={{ textAlign: 'left' }}>{variant.name}</h4>\r\n          <div style={{ display: 'flex' }}>{imagesToSelect}</div>\r\n        </div>\r\n      );\r\n\r\n    });\r\n\r\n    let manualAddImageForm = '';\r\n    if (carVariants.length === 0) {\r\n      manualAddImageForm = (\r\n        <input type=\"text\" placeholder=\"Add url\" onChange={event => select(car._id, car.variant, event.target.value)} />\r\n      );\r\n    }\r\n\r\n    const selectedImage = car.selectedFavcarsUrl ? <img src={car.selectedFavcarsUrl} style={{ maxHeight: '100px' }} alt={car.variant} /> : '';\r\n\r\n    const unselectButton = car.selectedFavcarsUrl ? <button onClick={() => unselect(car._id, car.selectedFavcarsVariant)}>Unselect {car.selectedFavcarsVariant}</button> : '';\r\n\r\n    const noMatchButton = !car.selectedFavcarsVariant ?\r\n      <button onClick={() => nomatch(car._id)}>No match</button> : '';\r\n\r\n    return (\r\n      <div key={car._id}>\r\n        <div style={{ display: 'flex' }}>\r\n          <h3 style={{ textAlign: 'left', color: 'blue' }}>\r\n            {noMatchButton} {car.variant} ({car.startYear})\r\n          </h3>\r\n          {selectedImage}\r\n          {unselectButton}\r\n          {manualAddImageForm}\r\n        </div>\r\n        {!car.selectedFavcarsUrl && <div style={{ maxHeight: '500px', overflowY: 'scroll' }}>{carVariants}</div>}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {carElements}\r\n    </>\r\n  );\r\n\r\n};\r\n\r\n","export const errorToMessage = error => {\r\n    if (error) {\r\n        switch (error.type) {\r\n            case 'required': return 'Field is mandatory';\r\n            case 'pattern': return 'Field should be a number';\r\n            default: return '';\r\n        }\r\n    }\r\n    return '';\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { errorToMessage } from '../functions/form';\r\nimport './CrudCars.css';\r\n\r\n\r\nexport const CrudCars = ({ selectedModel, selectedCars, createCar, removeCar }) => {\r\n\r\n  const [formDisplayed, setFormDisplayed] = useState(false);\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const onSubmit = data => createCar({ ...data, model: { ...selectedModel } });\r\n\r\n  const carElements = selectedCars.filter(car => !!car).map(car => (\r\n    <div key={'car-crud-item-' + car._id} id={'car-crud-item-' + car._id} className=\"crudCarsItem\">\r\n      <button className={car.selectedFavcarsUrl ? 'complete' : ''}\r\n        onClick={() => removeCar(car._id)}>\r\n        <span role=\"img\" aria-label=\"Remove\">🗑️</span>\r\n      </button>\r\n      <span style={{ marginRight: '10px' }}>{car.startYear}</span>\r\n      <span>{car.variant}</span>\r\n      <span role=\"img\" aria-label=\"Has image\" title=\"Has image\" className=\"has-image\">🖼</span>\r\n    </div>\r\n  ));\r\n\r\n  const fieldsContainerClassNames = ['fieldsContainer'];\r\n  if (formDisplayed) {\r\n    fieldsContainerClassNames.push('fieldsContainerDisplayed');\r\n  } else {\r\n    fieldsContainerClassNames.push('fieldsContainerHidden');\r\n  }\r\n\r\n  return (\r\n    <section className=\"crudCarsContainer\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"addButton\"\r\n        onClick={() => setFormDisplayed(!formDisplayed)}\r\n      >\r\n        {formDisplayed ? '➖' : '➕'}\r\n      </button>\r\n      <div className=\"elementsFormContainer\">\r\n        <section>{carElements}</section>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className={fieldsContainerClassNames.join(' ')}>\r\n            <input type=\"text\" name=\"variant\" placeholder=\"Variant\" ref={register({ required: true })}></input>\r\n            <div className=\"error\">{errorToMessage(errors.variant)}&nbsp;</div>\r\n            <input type=\"text\" name=\"startYear\" placeholder=\"Start year\" ref={register({ pattern: /^\\d{4}$/i, required: true })}></input>\r\n            <div className=\"error\">{errorToMessage(errors.startYear)}&nbsp;</div>\r\n            <input type=\"text\" name=\"endYear\" placeholder=\"End year\" ref={register({ pattern: /^\\d{4}$/i })}></input>\r\n            <div className=\"error\">{errorToMessage(errors.endYear)}&nbsp;</div>\r\n            <input type=\"text\" name=\"power\" placeholder=\"Power\" ref={register({ required: true })}></input>\r\n            <div className=\"error\">{errorToMessage(errors.power)}&nbsp;</div>\r\n            <input type=\"text\" name=\"realWeight\" placeholder=\"Real weight\" ref={register({ pattern: /^\\d+$/i })}></input>\r\n            <div className=\"error\">{errorToMessage(errors.realWeight)}&nbsp;</div>\r\n            <input type=\"text\" name=\"officialWeight\" placeholder=\"Official weight\" ref={register({ pattern: /^\\d+$/i, required: true })}></input>\r\n            <div className=\"error\">{errorToMessage(errors.officialWeight)}&nbsp;</div>\r\n            <input type=\"text\" name=\"options\" placeholder=\"Options\" ref={register}></input>\r\n            <div className=\"error\">{errorToMessage(errors.options)}&nbsp;</div>\r\n            <input type=\"text\" name=\"selectedFavcarsUrl\" placeholder=\"Image URL\" ref={register({ required: true })}></input>\r\n            <div className=\"error\">{errorToMessage(errors.selectedFavcarsUrl)}&nbsp;</div>\r\n            <button type=\"submit\" className=\"submitButton\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n\r\n};\r\n\r\n","\r\nimport React, {useState} from 'react';\r\nimport './Menu.css';\r\n\r\nexport const CHOOSE_IMAGES_MENU = \"Choose images\";\r\nexport const CREATE_UPDATE_DELETE_VARIANTS = \"CRUD cars\"\r\n\r\nexport const Menu = ({ menuSelect }) => {\r\n        \r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n    return (\r\n        <nav className=\"css-menu\">\r\n            <button className={`menu-item${selectedItem === CHOOSE_IMAGES_MENU ? ' selected' : ''}`}\r\n                onClick={() => { setSelectedItem(CHOOSE_IMAGES_MENU); menuSelect(CHOOSE_IMAGES_MENU); }}>\r\n                {CHOOSE_IMAGES_MENU}\r\n            </button>\r\n            <button className={`menu-item${selectedItem === CREATE_UPDATE_DELETE_VARIANTS ? ' selected' : ''}`}\r\n                onClick={() => { setSelectedItem(CREATE_UPDATE_DELETE_VARIANTS); menuSelect(CREATE_UPDATE_DELETE_VARIANTS); }}>\r\n                {CREATE_UPDATE_DELETE_VARIANTS}\r\n            </button>\r\n            <div className=\"animation start-home\"></div>\r\n        </nav>\r\n    );\r\n\r\n};\r\n","\r\n\r\nconst sortField = (a, b, field) => {\r\n    if (!a[field] && !b[field]) {\r\n        return 0;\r\n    }\r\n    if (!a[field]) {\r\n        return -1;\r\n    }\r\n    if (!b[field]) {\r\n        return 1;\r\n    }\r\n    return a[field] < b[field] ? -1 : a[field] === b[field] ? 0 : 1;\r\n};\r\n\r\nexport const sortBrands = (a, b) => {\r\n    return sortField(a, b, 'name');\r\n};\r\n\r\nexport const sortModels = (a, b) => {\r\n    return sortField(a, b, 'name');\r\n};\r\n\r\nexport const sortCars = (a, b) => {\r\n    if ((1 * a.startYear) - (1 * b.startYear) === 0) {\r\n        return sortField(a, b, 'variant');\r\n    } else {\r\n        return sortField(a, b, 'startYear');\r\n    }\r\n}\r\n","import { BehaviorSubject } from 'rxjs';\n\nconst BASE_URL = process.env.REACT_APP_PUBLIC_URL || 'http://localhost:3000';\n\nexport const currentUserObservable = new BehaviorSubject(null);\n\nexport const authenticate = formFields => {\n  return new Promise((resolve, reject) => {\n    fetch(\n      `${BASE_URL}/login`,\n      {\n        method: 'post',\n        body: JSON.stringify(formFields),\n        headers: {\n          'content-type': 'application/json',\n          'accept': 'application/json',\n        }\n      }\n    )\n      .then(response => {\n        if (`${response.status}` === '200') {\n          response.json().then(user => {\n            resolve(user)\n          });\n        } else {\n          response.json().then(reject);\n        }\n      })\n      .catch(error => {\n        reject(error);\n      });\n  });\n};\n\nexport const authFetch = (url, opts = {}) =>\n  fetch(`${BASE_URL}${url}`, {\n    ...opts, headers: {\n      ...opts.headers,\n      Authorization: `Bearer ${currentUserObservable.value.token}`,\n      'content-type': 'application/json',\n      accept: 'application/json'\n    }\n  });\n","import { authFetch } from './api';\r\nimport { sortCars } from './sort';\r\n\r\nexport const fetchInitData = () => {\r\n  return Promise.all([\r\n    authFetch('/cars').then(res => res.json()),\r\n    authFetch('/brands').then(res => res.json()),\r\n    authFetch('/models').then(res => res.json())\r\n  ]).then(processInitData);\r\n}\r\n\r\nexport const processInitData = ([cars, brands, models]) => {\r\n  const modelMap = {};\r\n  const brandMap = {};\r\n  for (const car of cars) {\r\n\r\n    const brand = brands.find(brand => brand.name === car.model.brand.name);\r\n    if (!brand) {\r\n      console.log(`brand not found for car`, car);\r\n    } else {\r\n      if (!brandMap[brand._id]) brandMap[brand._id] = { totalCount: 0, okCount: 0 };\r\n      brandMap[brand._id].totalCount++;\r\n      if (car.selectedFavcarsUrl) {\r\n        brandMap[brand._id].okCount++;\r\n      }\r\n    }\r\n\r\n    const model = models.find(model => model.brand.name === car.model.brand.name && model.name === car.model.name);\r\n    if (!model) {\r\n      console.log(`model not found for car`, car);\r\n    } else {\r\n      if (!modelMap[model._id]) modelMap[model._id] = { totalCount: 0, okCount: 0 };\r\n      modelMap[model._id].totalCount++;\r\n      if (car.selectedFavcarsUrl) {\r\n        modelMap[model._id].okCount++;\r\n      }\r\n    }\r\n  }\r\n  return { cars, models, brands, brandMap, modelMap };\r\n};\r\n\r\nexport const noCarImageMatch = carId => {\r\n  return authFetch('/cars/favcars/' + carId, {\r\n        method: 'delete',\r\n        headers: {\r\n        'accept': 'application/json'\r\n        }\r\n    }).then(response => response.json());\r\n};\r\n\r\nexport const selectCarImage = (carId, variantName, url) => {\r\n  return authFetch('/cars', {\r\n      method: 'put',\r\n    body: JSON.stringify({ carId, variantName, url }),\r\n    }).then(response => response.json());\r\n};\r\n\r\nexport const createCar = car => {\r\n  return authFetch('/cars', {\r\n      method: 'post',\r\n    body: JSON.stringify(car),\r\n    }).then(response => response.json())\r\n    .then(addedCar => console.log(addedCar));\r\n};\r\n\r\nexport const removeCar = (carId) => {\r\n  return authFetch('/cars/' + carId, {\r\n    method: 'delete',\r\n    }).then(response => console.log(response));\r\n     \r\n};\r\n\r\nexport const computeSelectedCars = (cars, selectedModel) => {\r\n  return cars\r\n    .filter(car => car.model.brand.name === selectedModel.brand.name && car.model.name === selectedModel.name)\r\n    .sort(sortCars);\r\n}\r\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport { errorToMessage } from '../functions/form';\n\nimport './Login.css';\n\nexport const Login = ({ onSubmit, errorMessage }) => {\n  const { register, handleSubmit, errors } = useForm();\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <h2 className=\"card-heading\">Login</h2>\n\n      {errorMessage && <p className=\"error\">{errorMessage}</p>}\n\n      <div>\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"Username\"\n          ref={register({ required: true })}\n        />\n        <div className=\"error\">{errorToMessage(errors.realWeight)}&nbsp;</div>\n      </div>\n\n      <div>\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          ref={register({ required: true })}\n        />\n        <div className=\"error\">{errorToMessage(errors.realWeight)}&nbsp;</div>\n      </div>\n\n      <button type=\"submit\" style={{ marginTop: '10px' }}>OK</button>\n    </form>\n  );\n};\n\nLogin.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string,\n};\n\nLogin.defaultProps = {\n  errorMessage: null,\n};\n","import React from 'react';\r\nimport { filter, } from 'rxjs/operators';\r\nimport { PickImages } from './components/PickImages';\r\nimport { CrudCars } from './components/CrudCars';\r\nimport { Menu, CHOOSE_IMAGES_MENU, CREATE_UPDATE_DELETE_VARIANTS } from './components/Menu';\r\nimport { sortBrands, sortModels } from './functions/sort';\r\nimport { fetchInitData, noCarImageMatch, selectCarImage, createCar, removeCar, computeSelectedCars } from './functions/car';\r\nimport { authenticate, currentUserObservable } from './functions/api';\r\nimport { Login } from './components/Login';\r\nimport './App.css';\r\n\r\nconst computeButtonClassNames = (selected, okCount, totalCount) => {\r\n  const buttonClassNames = [];\r\n  if (selected) {\r\n    buttonClassNames.push('selected-button');\r\n  }\r\n  if (okCount === 0) {\r\n    buttonClassNames.push('group-incomplete-button');\r\n  }\r\n  if (okCount < totalCount) {\r\n    buttonClassNames.push('group-empty-button');\r\n  }\r\n  return buttonClassNames;\r\n};\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      cars: [],\r\n      brands: [],\r\n      selectedBrand: null,\r\n      selectedModels: [],\r\n      selectedModel: null,\r\n      selectedCars: [],\r\n      selectedMenu: null,\r\n      errorMessage: null,\r\n    };\r\n\r\n    this.loginProcess = this.loginProcess.bind(this);\r\n    this.unselect = this.unselect.bind(this);\r\n    this.refreshState = this.refreshState.bind(this);\r\n    this.refreshState = this.refreshState.bind(this);\r\n    this.refreshStateRemove = this.refreshStateRemove.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    currentUserObservable.pipe(\r\n      filter(currentUser => !!currentUser),\r\n    ).subscribe(user => {\r\n      fetchInitData().then(initData => {\r\n        this.setState({ ...initData, user });\r\n      })\r\n    });\r\n  }\r\n\r\n  loginProcess(authFields) {\r\n    authenticate(authFields)\r\n      .then(success => {\r\n        currentUserObservable.next({\r\n          username: success.username,\r\n          token: success.token\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          errorMessage: error.errorMessage\r\n        });\r\n      });\r\n  }\r\n\r\n  unselect(carId) {\r\n    const indexCars = this.state.cars.findIndex(car => car._id === carId);\r\n    const newCars = [...this.state.cars];\r\n    newCars[indexCars].selectedFavcarsVariant = null;\r\n    newCars[indexCars].selectedFavcarsImage = null;\r\n\r\n    const indexSelectedCars = this.state.selectedCars.findIndex(car => car._id === carId);\r\n    const newSelectedCars = [...this.state.selectedCars];\r\n    newSelectedCars[indexSelectedCars].selectedFavcarsVariant = null;\r\n    newSelectedCars[indexSelectedCars].selectedFavcarsImage = null;\r\n\r\n    this.setState({cars: newCars, selectedCars: newSelectedCars})\r\n  }\r\n\r\n  refreshState(updatedCar) {\r\n    const updatedCarIndex = this.state.cars.findIndex(c => c._id === updatedCar._id);\r\n    const updatedCars = [...this.state.cars];\r\n    if (updatedCarIndex >= 0) {\r\n      updatedCars[updatedCarIndex] = updatedCar;\r\n    } else {\r\n      updatedCars.push(updatedCar);\r\n    }\r\n    const updatedSelectedCars = this.state.selectedModel ? computeSelectedCars(updatedCars, this.state.selectedModel) : [];\r\n    this.setState({selectedCars: updatedSelectedCars, cars: updatedCars});\r\n  }\r\n\r\n  refreshStateRemove(carId) {\r\n    const updatedCarIndex = this.state.cars.findIndex(c => c._id === carId);\r\n    if (updatedCarIndex >= 0) {\r\n      const updatedCars = [...this.state.cars];\r\n      updatedCars.splice(updatedCarIndex, 1);\r\n      const updatedSelectedCars = this.state.selectedModel ? computeSelectedCars(updatedCars, this.state.selectedModel) : [];\r\n      this.setState({ selectedCars: updatedSelectedCars, cars: updatedCars });\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      user,\r\n      selectedMenu,\r\n      brands,\r\n      brandMap,\r\n      selectedBrand,\r\n      models,\r\n      modelMap,\r\n      selectedModels,\r\n      selectedModel,\r\n      cars,\r\n      selectedCars,\r\n      errorMessage,\r\n    } = this.state;\r\n\r\n    const brandElements = brands.sort(sortBrands).map(brand => {\r\n      const brandStats = brandMap[brand._id];\r\n      const okCount = brandStats && brandStats.okCount ? brandStats.okCount : 0;\r\n      const totalCount = brandStats && brandStats.totalCount ? brandStats.totalCount : 0;\r\n      const isSelected = selectedBrand && selectedBrand._id === brand._id;\r\n      const buttonClassNames = computeButtonClassNames(isSelected, okCount, totalCount);\r\n      return (\r\n        <button key={ brand._id } onClick={() => {\r\n          const selectedModels = models.filter(model => model.brand.name === brand.name);\r\n            this.setState({selectedBrand: brand, selectedModels, selectedCars: [], selectedModel: null});\r\n          }}\r\n          className={buttonClassNames.join(' ')}>\r\n          { brand.name }\r\n        </button>\r\n      );\r\n    });\r\n\r\n    const modelElements = selectedModels.sort(sortModels).map(model => {\r\n      const modelStats = modelMap[model._id];\r\n      const okCount = modelStats && modelStats.okCount ? modelStats.okCount : 0;\r\n      const totalCount = modelStats && modelStats.totalCount ? modelStats.totalCount : 0;\r\n      const isSelected = selectedModel && selectedModel._id === model._id;\r\n      const buttonClassNames = computeButtonClassNames(isSelected, okCount, totalCount);\r\n      return (\r\n        <button key={ model._id } title={ model.favcarsName } onClick={() => {\r\n          const selectedCars = computeSelectedCars(cars, model);\r\n            this.setState({selectedModel: model, selectedCars});\r\n          }}\r\n          className={buttonClassNames.join(' ')}>\r\n          { model.name }\r\n        </button>\r\n      );\r\n    });\r\n\r\n    let selectedMenuElement = null;\r\n    switch (selectedMenu) {\r\n      case CHOOSE_IMAGES_MENU:\r\n        selectedMenuElement = (\r\n          <PickImages\r\n            selectedBrand={selectedBrand}\r\n            selectedModel={selectedModel}\r\n            selectedCars={selectedCars}\r\n            nomatch={carId => noCarImageMatch(carId).then(updatedCar => this.refreshState(updatedCar))}\r\n            select={(carId, variantName, url) => selectCarImage(carId, variantName, url).then(updatedCar => this.refreshState(updatedCar))}\r\n            unselect={this.unselect}>\r\n          </PickImages>\r\n        );\r\n        break;\r\n      case CREATE_UPDATE_DELETE_VARIANTS:\r\n        if (selectedModel) {\r\n          selectedMenuElement = (\r\n            <CrudCars \r\n              selectedModel={selectedModel}\r\n              selectedCars={selectedCars}\r\n              removeCar={carId => { removeCar(carId); this.refreshStateRemove(carId); }}\r\n              createCar={car => { createCar(car); this.refreshState(car); }}>\r\n            </CrudCars>\r\n          );\r\n        }\r\n        break;\r\n      default:\r\n        selectedMenuElement = '';\r\n    }\r\n\r\n    const headerBrandModelElements = (\r\n      <>\r\n        { !!selectedMenu && <hr className=\"separator\" />}\r\n        <section>{selectedMenu && brandElements}</section>\r\n        { selectedModels.length > 0 && <hr className=\"separator\" />}\r\n        <section>{modelElements}</section>\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <section className=\"top\">\r\n            <section className=\"title-logo\">\r\n              <img alt=\"logo\" src=\"logo.png\" />\r\n              <h1>\r\n                Admin\r\n                App\r\n              </h1>\r\n              {user && <div style={{ marginLeft: '10px' }}>👤{` ${user.username}`}</div>}\r\n            </section>\r\n            {user && <Menu menuSelect={selectedMenu => this.setState({ selectedMenu })} />}\r\n          </section>\r\n          {user && headerBrandModelElements}\r\n        </header>\r\n        <main className=\"App-main\">\r\n          {user && selectedMenuElement}\r\n          {!user && <Login onSubmit={this.loginProcess} errorMessage={errorMessage} />}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}